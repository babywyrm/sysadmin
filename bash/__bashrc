# Detect if interactive shell
[[ $- != *i* ]] && return

# History + input
export HISTFILESIZE=10000
export HISTSIZE=500
export HISTCONTROL=erasedups:ignoredups:ignorespace
shopt -s histappend checkwinsize

# Default editor
export EDITOR=nano
export VISUAL=nano

# Colors (macOS uses LSCOLORS, not LS_COLORS)
export CLICOLOR=1
export LSCOLORS=GxFxCxDxBxegedabagaced

# Case-insensitive tab completion
bind "set completion-ignore-case on"
bind "set show-all-if-ambiguous on"

# Disable Ctrl-S flow control
stty -ixon

# Prompt: stripped down for macOS (no /proc or Netstat counts)
PS1='\[\e[1;32m\]\u@\h\[\e[0m\]:\[\e[1;34m\]\w\[\e[0m\]\$ '

# Use GNU `ls` if installed via brew (optional)
# alias ls='gls --color=auto'  # if `brew install coreutils` (includes gls)

# macOS-safe aliases
alias ll='ls -lGh'
alias la='ls -lAGh'
alias l='ls -Gh'
alias grep='grep --color=auto'
alias cls='clear'
alias df='df -h'
alias du='du -h'
alias topcpu='ps aux | sort -nrk 3 | head -10'

# Fix for `edit` fallback function (macOS might not have jpico)
edit() {
  if command -v nano &>/dev/null; then
    nano "$@"
  elif command -v vi &>/dev/null; then
    vi "$@"
  else
    echo "No editor found"
  fi
}

# Extract archives
extract () {
  for archive in "$@"; do
    if [[ -f "$archive" ]]; then
      case "$archive" in
        *.tar.bz2)   tar xvjf "$archive" ;;
        *.tar.gz)    tar xvzf "$archive" ;;
        *.bz2)       bunzip2 "$archive" ;;
        *.gz)        gunzip "$archive" ;;
        *.tar)       tar xvf "$archive" ;;
        *.zip)       unzip "$archive" ;;
        *.7z)        7z x "$archive" ;;
        *)           echo "Don't know how to extract '$archive'" ;;
      esac
    else
      echo "'$archive' is not a valid file!"
    fi
  done
}

# Get internal and external IP
whatismyip() {
  echo "Internal IP: $(ipconfig getifaddr en0)"
  echo "External IP: $(curl -s ifconfig.me)"
}

# CPU usage on macOS
cpu() {
  ps -A -o %cpu | awk '{s+=$1} END {print s "%"}'
}

# Go up N levels
up () {
  local count=$1
  local path=""
  for ((i=0; i<count; i++)); do
    path+="../"
  done
  cd "$path" || return
}

