  # https://towardsdatascience.com/how-to-set-up-ingress-controller-in-aws-eks-d745d9107307
  #
  #

apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: nginx
  # `NodePort` is required when the target-type is `instance`
  # for `ip` target-type your vpc-cni must have support
  # https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.4/guide/ingress/annotations/#target-type
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - image: nginx:alpine
          name: nginx
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    # load balancer priority, lower numbers are evaluated first
    # https://docs.aws.amazon.com/elasticloadbalancing/latest/application/listener-update-rules.html#update-rule-priority
    alb.ingress.kubernetes.io/group.order: "10"
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "30" # in seconds
    alb.ingress.kubernetes.io/healthcheck-path: /healhtz
    alb.ingress.kubernetes.io/healty-threshold-count: "1"
    # by default, it will create a listener rule on port 80
    # you can specify both ports as well like this: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: "3"
  name: nginx
spec:
  # if you have the `ingressclass.kubernetes.io/is-default-class=true`
  # annotation on the ingress class, you don't need this
  # ingressClassName: aws-alb
  rules:
    - host: nginx.example.com
      http:
        paths:
          - backend:
              service:
                name: nginx
                port:
                  number: 80
            path: /
            pathType: Prefix
  # the ALB will fetch the right certificate from ACM
  # you can also specify manually using `alb.ingress.kubernetes.io/certificate-arn` annotation on the Ingress
  # https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.4/guide/ingress/annotations/#certificate-arn
  tls:
    - hosts:
        - "*.example.com"
      secretName: example-tls
