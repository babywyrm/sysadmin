#!/bin/bash
# Enhanced Linux System Enumeration Script for Suspicious Activity

# --- Configuration ---
# Paths to check (customize as needed)
CRON_PATHS=("/etc/cron.d" "/etc/cron.daily" "/etc/cron.hourly"
            "/etc/cron.monthly" "/etc/cron.weekly" "/var/spool/cron/crontabs")
SUSPICIOUS_FILE_PATHS=("/dev" "/tmp" "/var/tmp" "/var/www/html" "/usr/share")

# Regex patterns for suspicious cron jobs (adjust as needed)
CRON_REGEX='sh |bash |curl|wget|nc |perl|python|base64'

# --- Helper Functions ---
section() {
    echo -e "\n\033[1;32m[+] $1\033[0m"
}

suspect() {
    echo -e "\e[31m[!]\e[0m $1"
}

# --- Checks ---

# Processes
check_processes() {
    section "Suspicious Processes"
    local PROCESS_REGEX='rootkit|backdoor|perl|nc -e|bash -i|netcat|ncat|nc -l|telnet|python -m SimpleHTTPServer'

    ps aux --forest | grep -E "$PROCESS_REGEX" | grep -v grep
    if ps aux --forest | grep -Eq "$PROCESS_REGEX" ; then
        suspect "Possible suspicious processes running!"
    fi
}

# Open Ports
check_ports() {
    section "Open Ports"
    echo "--- netstat ---"
    netstat -tulnp | grep LISTEN
    echo "--- ss ---"
    ss -tulnp | grep LISTEN
}

# Cron Jobs
check_cronjobs() {
    section "Cron Jobs"
    for path in "${CRON_PATHS[@]}"; do
        echo "--- Listing: $path ---"
        ls -la "$path" 2>/dev/null || true  # Ignore errors if path doesn't exist
    done

    echo "--- Searching for suspicious entries ---"
    grep -riE "$CRON_REGEX" "${CRON_PATHS[@]}" 2>/dev/null
    if grep -qiE "$CRON_REGEX" "${CRON_PATHS[@]}"; then
        suspect "Suspicious cron job entries detected!"
    fi
}

# User Accounts
check_users() {
    section "User Accounts"
    awk -F: '($3==0){print $1" has UID 0!"}' /etc/passwd | grep -v root
    if awk -F: '($3==0){print $1}' /etc/passwd | grep -v '^root$' >/dev/null; then
        suspect "Non-root user with UID 0 detected!"
    fi

    echo "--- Last Login Information ---"
    lastlog | grep -vE 'Never logged in|Username'
}

# Suspicious Files
check_files() {
    section "Suspicious Files"
    find "${SUSPICIOUS_FILE_PATHS[@]}" -type f \( -name '*.sh' -o -name '*.pl' -o -name '*.py' \) -exec ls -la {} + 2>/dev/null
    if find "${SUSPICIOUS_FILE_PATHS[@]}" -type f \( -name '*.sh' -o -name '*.pl' -o -name '*.py' \)  >/dev/null; then
        suspect "Suspicious files found in defined paths!"
    fi
}

# /proc entries
check_proc() {
    section "Suspicious /proc entries"
    grep -r "^/tmp" /proc/*/cwd 2>/dev/null
    if grep -q "^/tmp" /proc/*/cwd 2>/dev/null; then
        suspect "Processes running from /tmp detected"
    fi
    grep -r "^/dev/shm" /proc/*/cwd 2>/dev/null
     if grep -q "^/dev/shm" /proc/*/cwd 2>/dev/null; then
        suspect "Processes running from /dev/shm detected!"
    fi
}

# Setuid/Setgid Binaries
check_setuid() {
    section "Setuid/Setgid Binaries"
    find / -perm -4000 -type f -exec ls -la {} + 2>/dev/null
    if find / -perm -4000 -type f  >/dev/null; then
        suspect "Setuid/Setgid binaries found."
    fi
}

# Network Interfaces
check_network_interfaces() {
    section "Network Interfaces"
    ip addr | grep inet
    ip link | grep -i promisc
    if ip link | grep -qi promisc; then
        suspect "Promiscuous mode interface detected!"
    fi
}

# SSH Authorized Keys
check_ssh_keys() {
    section "SSH Authorized Keys"
    find /home /root -name authorized_keys -exec ls -la {} + 2>/dev/null
    if find /home /root -name authorized_keys  >/dev/null; then
        suspect "SSH authorized keys found in home/root directories."
    fi
}

# --- Main Execution ---
main() {
    echo -e "\033[32m[+] Linux System Enumeration Started at $(date)\033[0m"

    check_processes
    check_ports
    check_cronjobs
    check_users
    check_files
    check_proc
    check_setuid
    check_network_interfaces
    check_ssh_keys

    echo -e "\n\033[32m[+] Linux Enumeration Completed\033[0m"
}

main  # Execute the main function
